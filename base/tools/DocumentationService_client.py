#encoding: utf-8
##################################################
# file: DocumentationService_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     wsdl2py --complexType ../../openorange/routines/DocumentationWebServices.wsdl
# 
##################################################

from DocumentationService_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class DocumentationServiceLocator:
    DocumentationServiceSoap_address = "http://www.openorange.com.ar/WSActions/DocumentationServices.py"
    def getDocumentationServiceSoapAddress(self):
        return DocumentationServiceLocator.DocumentationServiceSoap_address
    def getDocumentationServiceSoap(self, url=None, **kw):
        return DocumentationServiceSoapSOAP(url or DocumentationServiceLocator.DocumentationServiceSoap_address, **kw)

# Methods
class DocumentationServiceSoapSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: AppendDocumentation
    def AppendDocumentation(self, request, **kw):
        if isinstance(request, AppendDocumentationSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.openorange.com.ar/AppendDocumentation", **kw)
        # no output wsaction
        response = self.binding.Receive(AppendDocumentationSoapOut.typecode)
        return response

    # op: GetDocumentation
    def GetDocumentation(self, request, **kw):
        if isinstance(request, GetDocumentationSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.openorange.com.ar/GetDocumentation", **kw)
        # no output wsaction
        response = self.binding.Receive(GetDocumentationSoapOut.typecode)
        return response

    # op: GetIndex
    def GetIndex(self, request, **kw):
        if isinstance(request, GetIndexSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://www.openorange.com.ar/GetIndex", **kw)
        # no output wsaction
        response = self.binding.Receive(GetIndexSoapOut.typecode)
        return response

AppendDocumentationSoapIn = GED("http://www.openorange.com.ar/WSSpecification/DocumentationServices", "AppendDocumentationRequestObject").pyclass

AppendDocumentationSoapOut = GED("http://www.openorange.com.ar/WSSpecification/DocumentationServices", "AppendDocumentationResponseObject").pyclass

GetDocumentationSoapIn = GED("http://www.openorange.com.ar/WSSpecification/DocumentationServices", "GetDocumentationRequestObject").pyclass

GetDocumentationSoapOut = GED("http://www.openorange.com.ar/WSSpecification/DocumentationServices", "GetDocumentationResponseObject").pyclass

GetIndexSoapIn = GED("http://www.openorange.com.ar/WSSpecification/DocumentationServices", "GetIndexRequestObject").pyclass

GetIndexSoapOut = GED("http://www.openorange.com.ar/WSSpecification/DocumentationServices", "GetIndexResponseObject").pyclass
